<?xml version="1.0" encoding="UTF-8" ?>
<x:schema xmlns:x="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" vc:minVersion="1.1">

	<!-- basic command line argument type -->
	<x:complexType name="paramAbstract" abstract="true">
		<x:simpleContent>
			<x:extension base="x:string">
				<x:attribute ref="paramFormat"/>
				<x:attribute ref="spacingFormat"/>
				<x:attribute ref="quoteFormat"/>
				<x:attribute ref="separateFormat"/>
			</x:extension>
		</x:simpleContent>
	</x:complexType>

	<!-- command line flag argument -->
	<x:complexType name="paramBoolean">
		<x:simpleContent>
			<x:restriction base="paramAbstract">
				<x:pattern value="(.*(\$\{[A-Za-z_]+\})|(\$\(.+\))|([\[\(\{](\$[A-Za-z_]+(,\s*){0,1}){0,1}([0-9]+(,\S*){0,1}){0,1}[\]\)\}])*.*)*"/>
				<x:enumeration value="true"/>
				<x:enumeration value="false"/>
				<x:enumeration value="True"/>
				<x:enumeration value="False"/>
				<x:enumeration value="TRUE"/>
				<x:enumeration value="FALSE"/>
			</x:restriction>
		</x:simpleContent>
	</x:complexType>

	<!-- command line argument -->
	<x:complexType name="paramString">
		<x:simpleContent>
			<x:restriction base="paramAbstract">
				<x:pattern value="(.*(\$\{[A-Za-z_]+\})|(\$\(.+\))|([\[\(\{](\$[A-Za-z_]+(,\s*){0,1}){0,1}([0-9]+(,\S*){0,1}){0,1}[\]\)\}])*.*)*"/>
			</x:restriction>
		</x:simpleContent>
	</x:complexType>
	<x:complexType name="paramInteger">
		<x:simpleContent>
			<x:restriction base="paramAbstract">
				<x:pattern value="(.*(\$\{[A-Za-z_]+\})|(\$\(.+\))|([\[\(\{](\$[A-Za-z_]+(,\s*){0,1}){0,1}([0-9]+(,\S*){0,1}){0,1}[\]\)\}])*.*)*"/>
				<x:pattern value="[0-9]+"/>
			</x:restriction>
		</x:simpleContent>
	</x:complexType>
	<x:complexType name="paramDouble">
		<x:simpleContent>
			<x:restriction base="paramAbstract">
				<x:pattern value="(.*(\$\{[A-Za-z_]+\})|(\$\(.+\))|([\[\(\{](\$[A-Za-z_]+(,\s*){0,1}){0,1}([0-9]+(,\S*){0,1}){0,1}[\]\)\}])*.*)*"/>
				<x:pattern value="[0-9]+(\.[0-9]+)?"/>
			</x:restriction>
		</x:simpleContent>
	</x:complexType>

	<!-- how the parameters must be given -->
	<x:attribute name="paramFormat">
		<x:simpleType>
			<x:restriction base="x:string">
				<x:enumeration value="shortOnly"/>	<!-- parameters and flags are prefixed with '-' no matter how long their name is -->
				<x:enumeration value="longShort"/>	<!-- names with more than one char are longname and are prefixed with '-\-' while flags and short names are prefixed by '-' [default] -->
				<x:enumeration value="shflag"/>	<!-- boolean sh flag -> -\-flag when true and -\-noflag when value is false -->
				<x:enumeration value="plain"/>		<!-- argument without any prefix => value -->
			</x:restriction>
		</x:simpleType>
	</x:attribute> 

	<!-- how parameter and value are spaced -->
	<x:attribute name="spacingFormat">
		<x:simpleType>
			<x:restriction base="x:string">
				<x:enumeration value="blankSeparated"/>	<!-- parameter and value are separated by a blank (' ') -v 10 [default] -->
				<x:enumeration value="equalSeparated"/>	<!-- parameter and value are separated by a blank ('=') -v=10 -->
			</x:restriction>
		</x:simpleType>
	</x:attribute>

	<!-- how multiple values are separated in the same paramter (default ',')  -->
	<x:attribute name="separateFormat">
		<x:simpleType>
			<x:restriction base="x:string">
			<!-- allow anything -->
			<x:pattern value=".*"/>
			</x:restriction>
		</x:simpleType>
	</x:attribute>

	<!-- how the values are quoted -->
	<x:attribute name="quoteFormat">
		<x:simpleType>
			<x:restriction base="x:string">
				<x:enumeration value="unquoted"/>	<!-- value is not quoted -->
				<x:enumeration value="singleQuoted"/>	<!-- value is quoted with '' -->
				<x:enumeration value="doubleQuoted"/>	<!-- value is quoted with "" [default] -->
			</x:restriction>
		</x:simpleType>
	</x:attribute> 		

</x:schema>
