<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.lmu.ifi.bio</groupId>
	<artifactId>watchdog</artifactId>
	<version>DEV</version>
	<properties>
		<jdk.version>11</jdk.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<targetDirectory>${project.basedir}/jars</targetDirectory>
		<!-- todo: change tmp directory if /tmp does not exist -->
		<tmpBuildDirectory>/tmp/watchdog-build/</tmpBuildDirectory>
	</properties>
	<build>
		<defaultGoal>initialize package clean</defaultGoal>
		<!-- configure the source files -->
		<directory>${tmpBuildDirectory}</directory>
		<sourceDirectory>java_source/</sourceDirectory>
		<resources>
			<resource>
				<directory>java_source/</directory>
				<includes>
					<include>**/*.java</include>
					<include>**/*.class</include>
					<include>**/*.png</include>
					<include>**/*.txt</include>
					<include>**/*.gif</include>
					<include>**/*.properties</include>
					<include>**/*.css</include>
					<include>**/*.fxml</include>
				</includes>
			</resource>
		</resources>
		<plugins>
			<!-- compile own source code -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
					<compilerArgs>
						<arg>--add-exports</arg>
						<arg>javafx.controls/com.sun.javafx.scene.control=ALL-UNNAMED</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<!-- create jar file with compiled Watchdog classes -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<outputDirectory>${targetDirectory}</outputDirectory>
				</configuration>
			</plugin>
			<!-- copy dependencies to libs -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${targetDirectory}/libs</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- collect and bundle the source files -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<configuration>
							<finalName>watchdog</finalName>
						</configuration>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- move javafx modules to libs/modules and generate run JARs -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<!-- clean destination folder -->
					<execution>
						<id>cleanDest</id>
						<phase>initialize</phase>
						<configuration>
							<target>
								<delete quiet="true" includeemptydirs="true">
									<fileset dir="${targetDirectory}/" excludes="watchdog-RELEASE.jar" />
								</delete>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<!-- move javafx modules and source file-->
					<execution>
						<id>moveModules</id>
						<phase>package</phase>
						<configuration>
							<target>
								<move todir="${targetDirectory}/libs/modules/" overwrite="true">
									<fileset dir="${targetDirectory}/libs/" includes="javafx-*.jar" />
								</move>
								<copy file="${tmpBuildDirectory}/watchdog-sources.jar" todir="${targetDirectory}/" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<!-- create run JARS using the ant script -->
					<execution>
						<id>generateRunJars</id>
						<phase>package</phase>
						<configuration>
							<target>
								<ant antfile="${project.basedir}/generateRunableJARs.ant" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- obtain licenses of used libs -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>2.0.0</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>download-licenses</goal>
							<goal>add-third-party</goal>
						</goals>
						<configuration>
							<licensesOutputDirectory>${targetDirectory}/libs/licenses/</licensesOutputDirectory>
							<cleanLicensesOutputDirectory>true</cleanLicensesOutputDirectory>
							<forceDownload>true</forceDownload>
							<errorRemedy>ignore</errorRemedy>
							<sortByGroupIdAndArtifactId>true</sortByGroupIdAndArtifactId>
							<outputDirectory>${targetDirectory}/libs/</outputDirectory>
							<thirdPartyFilename>THIRD-PARTY-LIB-LICENSES.txt</thirdPartyFilename>
							<licensesOutputFileEncoding>UTF8</licensesOutputFileEncoding>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- do some cleaning -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<phase>package</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<version>6.5.0</version>
				<executions>
					<execution>
					<goals>
						<goal>check</goal>
					</goals>
				</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<!-- dependencies required to compile / run Watchdog -->
	<dependencies>
		<!-- https://mvnrepository.com/artifact/org.openjfx/javafx-controls -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>11.0.2</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.openjfx/javafx-fxml -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-fxml</artifactId>
			<version>11.0.2</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.sun.mail/javax.mail -->
		<dependency>
			<groupId>com.sun.mail</groupId>
			<artifactId>javax.mail</artifactId>
			<version>1.6.2</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.9</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.beust/jcommander -->
		<dependency>
			<groupId>com.beust</groupId>
			<artifactId>jcommander</artifactId>
			<version>1.81</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.ini4j/ini4j -->
		<dependency>
			<groupId>org.ini4j</groupId>
			<artifactId>ini4j</artifactId>
			<version>0.5.4</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-vfs2 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-vfs2</artifactId>
			<version>2.9.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.11.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.12.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/commons-codec/commons-codec -->
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.15</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.github.classgraph/classgraph -->
		<dependency>
			<groupId>io.github.classgraph</groupId>
			<artifactId>classgraph</artifactId>
			<version>4.8.138</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/net.sf.jsignature.io-tools/easystream -->
		<dependency>
			<groupId>net.sf.jsignature.io-tools</groupId>
			<artifactId>easystream</artifactId>
			<version>1.2.15</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.jcraft/jsch -->
		<dependency>
			<groupId>com.jcraft</groupId>
			<artifactId>jsch</artifactId>
			<version>0.1.55</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.nanohttpd/nanohttpd -->
		<dependency>
			<groupId>org.nanohttpd</groupId>
			<artifactId>nanohttpd</artifactId>
			<version>2.3.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/us.levk/drmaa-common -->
		<dependency>
			<groupId>us.levk</groupId>
			<artifactId>drmaa-common</artifactId>
			<version>1.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-nop -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-nop</artifactId>
			<version>2.0.0-alpha7</version>
			<scope>runtime</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/edu.princeton.cup/java-cup -->
		<dependency>
			<groupId>edu.princeton.cup</groupId>
			<artifactId>java-cup</artifactId>
			<version>10k</version>
			<scope>runtime</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.opengis.cite.xerces/xercesImpl-xsd11 -->
		<dependency>
			<groupId>org.opengis.cite.xerces</groupId>
			<artifactId>xercesImpl-xsd11</artifactId>
			<version>2.12-beta-r1667115</version>
			<scope>runtime</scope>
		</dependency>
	</dependencies>
</project>
