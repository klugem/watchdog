<?xml version="1.0" encoding="UTF-8" ?>
<x:schema xmlns:x="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" vc:minVersion="1.1" xmlns:xerces="http://xerces.apache.org">

	<!-- definition of the task parameters -->
	<x:complexType name="featureCountsTaskParameterType">
		<x:all>
			<x:element name="annotation" type="paramAbsoluteFilePath" minOccurs="1" maxOccurs="1"/>
			<x:element name="input" type="paramAbsoluteFilePath" minOccurs="1" maxOccurs="1"/>
			<x:element name="output" type="paramAbsoluteFilePath" minOccurs="1" maxOccurs="1"/>
			<x:element name="annotationType" minOccurs="0" maxOccurs="1">
				<x:complexType>
					<x:simpleContent>
						<x:restriction base="paramString">
							<x:enumeration value="GTF"/>
							<x:enumeration value="SAF"/>
						</x:restriction>
					</x:simpleContent>
				</x:complexType>
			</x:element>
			<x:element name="featureType" type="paramString" minOccurs="0" maxOccurs="1"/>
			<x:element name="groupType" type="paramString" minOccurs="0" maxOccurs="1"/>
			<x:element name="stranded" type="paramIntegerGreater0_2_featureCounts" minOccurs="0" maxOccurs="1"/>
			<x:element name="threads" type="paramIntegerGreater0_featureCounts" minOccurs="0" maxOccurs="1"/>
			<x:element name="minOverlap" type="paramInteger" minOccurs="0" maxOccurs="1"/>
			<x:element name="disableGroupSummarization" type="paramBoolean" minOccurs="0" maxOccurs="1"/>
			<x:element name="multiMapping" type="paramBoolean" minOccurs="0" maxOccurs="1"/>
			<x:element name="primary" type="paramBoolean" minOccurs="0" maxOccurs="1"/>
			<x:element name="countFragments" type="paramBoolean" minOccurs="0" maxOccurs="1"/>
			<x:element name="multiCountMetaFeatures" type="paramBoolean" minOccurs="0" maxOccurs="1"/>
			<x:element name="detailedReadAssignments" type="paramBoolean" minOccurs="0" maxOccurs="1"/>
		</x:all>
	</x:complexType>

	<!-- change default attributes -->
	<x:complexType name="featureCountsTaskOverrideType">
		<x:complexContent>
			<x:restriction base="baseAttributeTaskType">
				<x:attribute name="binName" type="x:string" fixed="featureCounts.sh"/>
			</x:restriction>
		</x:complexContent>
	</x:complexType>

	<!-- definition of final task -->
	<x:complexType name="featureCountsTaskType">
		<x:complexContent>
			<x:extension base="featureCountsTaskOverrideType">
				<x:all>
					<x:element name="parameter" type="featureCountsTaskParameterType" minOccurs="1" maxOccurs="1" />
					<x:element name="return" type="featureCountsTaskReturnType" minOccurs="0" maxOccurs="0" />
					<x:group ref="defaultTaskElements" />
				</x:all>
			</x:extension>
		</x:complexContent>
	</x:complexType>

	<x:complexType name="featureCountsTaskReturnType">
		<x:complexContent>
			<x:extension base="taskReturnType">
				<x:all>
					<x:element name="FeatureCountCountFile" type="x:string"/>
					<x:element name="FeatureCountSummaryFile" type="x:string"/>
				</x:all>
			</x:extension>
		</x:complexContent>
	</x:complexType>

	<!-- make task definition availible via substitution group -->
	<x:element name="featureCountsTask" type="featureCountsTaskType" substitutionGroup="abstractTask" />

	<!-- module specific parameter types -->
	<x:complexType name="paramIntegerGreater0_2_featureCounts">
		<x:simpleContent>
			<x:restriction base="paramInteger">
				<x:assert test="matches($value, '(\$\{[A-Za-z_]+\})|(\$\(.+\))|([\[\(\{](\$[A-Za-z_]+(,\s*){0,1}){0,1}([0-9]+(,\S*){0,1}){0,1}[\]\)\}])') or (2 >= $value and 0 &lt;= $value)" xerces:message="Parameter with name '{$tag}' must be between 0 and 2." />
			</x:restriction>
		</x:simpleContent>
	</x:complexType>
	<x:complexType name="paramIntegerGreater0_featureCounts">
		<x:simpleContent>
			<x:restriction base="paramInteger">
				<x:assertion test="matches($value, '(\$\{[A-Za-z_]+\})|(\$\(.+\))|([\[\(\{](\$[A-Za-z_]+(,\s*){0,1}){0,1}([0-9]+(,\S*){0,1}){0,1}[\]\)\}])') or $value >= 0"  xerces:message="Parameter with name '{$tag}' must be equal or greater than 0." />
			</x:restriction>
		</x:simpleContent>
	</x:complexType>

</x:schema>
